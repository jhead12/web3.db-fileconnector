{
  "name": "web3.db-fileconnector",
  "version": "1.3.0",
  "description": "Grapql System build B is an open database built on top of web3 technologies. It is a decentralized, open-source database that allows users to store and query data in a secure and efficient manner. The system is designed to be user-friendly and accessible to developers of all skill levels.",
  "keywords": [
    "web3",
    "database",
    "open-data",
    "decentralized",
    "graphql",
    "ceramic",
    "node",4    "orbis"
  ],
  "license": "MIT",
  "homepage": "https://github.com/jhead12/web3db-fileconnector/orbisdb#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/jhead12/web3db-fileconnector/orbisdb.git"
  },
  "bugs": "https://github.com/jhead12/web3db-fileconnector/orbisdb/issues",
  "author": {
    "name": "Joshua Head",
    "url": "https://github.com/jhead12/jhead12/web3db-fileconnector"
  },
  "scripts": {
    "build": "cd client && next build",
    "start": "cross-env NODE_ENV=production node index.js",
    "dev": "node index.js",
    "clean": "rm -rf client/.next",
    "clear-port": ".bin/clear_ports.sh",
    "publish:npm": "npm publish --access public",
    "publish:docker": "docker buildx build --platform linux/arm64,linux/amd64 -t orbisdb-fileconnector:latest . && docker push orbisdb-fileconnector:latest",
    "lint": "eslint .",
    "clean:all": "rm -rf client/.next client/node_modules",
    "publish": "npm run build && npm run docker:restart",
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev:docker": "npm run docker:start && node index.js",
    "dev:debug": "cross-env LOG_LEVEL=debug node index.js",
    "dev:watch": "nodemon --ignore '*.json' index.js",
    "format": "prettier . --write",
    "docker:start": "docker start orbisdb-pgvector || docker run -d --name orbisdb-pgvector -e POSTGRES_PASSWORD=postgres -p 5432:5431 pgvector/pgvector:0.7.4-pg16",
    "docker:stop": "docker stop orbisdb-pgvector",
    "docker:restart": "npm run docker:stop && npm run docker:start || npm run docker:start",
